@model Uc_13_Caua_WebSite.Models.Pedido

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Pedido</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Quantidade" class="control-label"></label>
                <input asp-for="Quantidade" class="form-control" id="quantidade" />
                <span asp-validation-for="Quantidade" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ProdutoId" class="control-label"></label>
                <select asp-for="ProdutoId" class="form-control" asp-items="ViewBag.ProdutoId" id="produtoSelect">
                    <option value="">Selecione um produto</option>
                </select>
                <span asp-validation-for="ProdutoId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">Preço Unitário</label>
                <input type="text" class="form-control" id="precoUnitario" readonly />
            </div>

            <div class="form-group">
                <label class="control-label">Estoque Disponível</label>
                <input type="text" class="form-control" id="estoqueDisponivel" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Preco" class="control-label"></label>
                <input asp-for="Preco" class="form-control" id="precoTotal" readonly />
                <span asp-validation-for="Preco" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Cadastrar" class="btn btn-primary" />
            </div>
        </form>


    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.getElementById("produtoSelect").addEventListener("change", async function() {
            const produtoId = this.value;
            if (!produtoId) return;

            const response = await fetch(`/Pedidoes/GetProdutoInfo?produtoId=${produtoId}`);
            const data = await response.json();

            document.getElementById("precoUnitario").value = data.precoUnitario.toLocaleString('pt-BR', {
                style: 'currency',
                currency: 'BRL'
            });

            document.getElementById("estoqueDisponivel").value = data.estoque;
            calcularTotal();
        });

        document.getElementById("quantidade").addEventListener("input", calcularTotal);

        function calcularTotal() {
            const quantidade = parseFloat(document.getElementById("quantidade").value) || 0;
            const precoUnitario = parseFloat(document.getElementById("precoUnitario").value.replace(/[^\d,]/g, '').replace(',', '.')) || 0;
            const total = quantidade * precoUnitario;

            document.getElementById("precoTotal").value = total.toLocaleString('pt-BR', {
                style: 'currency',
                currency: 'BRL'
            });
        }
    </script>
}